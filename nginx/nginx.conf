daemon off;

include /etc/nginx/nginx_logging.conf;

include /etc/nginx/nginx_envs.conf;

worker_processes 1;

events { worker_connections 1024; }

http {
  include /etc/nginx/nginx_system_resolver.conf;

  lua_shared_dict token_cache 10m;
  lua_shared_dict discovery 1m;
  lua_shared_dict jwks 1m;

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/mime.types;
  sendfile on;

  client_max_body_size 20m;
  client_body_buffer_size 128k;
  client_body_timeout 300s;
  client_header_buffer_size 256k;
  keepalive_timeout 300s;
  keepalive_requests 10000;
  large_client_header_buffers 8 256k;

  fastcgi_buffers 16 64k;
  fastcgi_buffer_size 256k;
  fastcgi_read_timeout 300s;
  fastcgi_busy_buffers_size 384k;
  fastcgi_request_buffering off;

  proxy_http_version 1.1;
  proxy_headers_hash_max_size 1024;
  proxy_headers_hash_bucket_size 128;
  proxy_connect_timeout 180s;
  proxy_read_timeout 300s;
  proxy_send_timeout 300s;
  proxy_buffer_size 512k;
  proxy_buffers 16 4m;
  proxy_busy_buffers_size 16m;
  proxy_cookie_flags * samesite=none secure;

  # if LDAP authentication is enabled, this will configure the ldap_server section
  include /etc/nginx/nginx_ldap_rt.conf;

  upstream whoami {
    server whoami:80;
  }

  map $http_x_forwarded_proto $proxy_x_forwarded_proto {
    default $http_x_forwarded_proto;
    '' $scheme;
  }

  map $proxy_x_forwarded_proto_override $proxy_x_forwarded_proto_final {
    default $proxy_x_forwarded_proto_override;
    '' $proxy_x_forwarded_proto;
  }

  init_by_lua_block {
      local nginx_helpers = require("nginx_auth_helpers")
      nginx_helpers.init()
  }

  server {
    include /etc/nginx/listen_443.conf;
    include /etc/nginx/nginx_ssl_config.conf;

    # Robots (don't crawl me bro)
    # location = /robots.txt {
    #   include /etc/nginx/nginx_auth_rt.conf;
    #   limit_except GET { deny all; }
    #   default_type text/plain;
    #   return 200 'User-agent: *\nDisallow: /\n';
    # }

    location /basic {
      # experimental: attempt to transparently handle HTTP Basic Authentication via access token request
      include /etc/nginx/nginx_auth_basic_translate_rt.conf;
      proxy_pass http://whoami;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

    location / {
      include /etc/nginx/nginx_auth_rt.conf;
      proxy_pass http://whoami;
      proxy_redirect off;
      include /etc/nginx/nginx_proxy_forward_headers.conf;
    }

  }

}
